const { Client, GatewayIntentBits, EmbedBuilder } = require('discord.js');

const client = new Client({
    intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, GatewayIntentBits.MessageContent]
});

const prefix = '.';

client.once('ready', () => {
    console.log(`Logged in as ${client.user.tag}!`);
    client.user.setPresence({
        activities: [{ name: 'Doing things others cant.', type: 4 }],
        status: 'online'
    });
});

client.on('messageCreate', async (message) => {
    if (!message.content.startsWith(prefix) || message.author.bot) return;

    const args = message.content.slice(prefix.length).trim().split(/ +/);
    const command = args.shift().toLowerCase();

    // Support Ticket Commands
    if (command === 'supportticketeng') {
        const supportEmbed = new EmbedBuilder()
            .setColor('#FFFFFF')
            .setTitle('üìã Support Ticket Requirements')
            .setDescription('In order to assist you efficiently, please ensure you provide the following when opening a ticket:')
            .addFields(
                {
                    name: 'üìπ Required Information',
                    value: '‚Ä¢ A clear, high-quality video demonstrating the issue\n‚Ä¢ A screenshot of the error message(s)\n‚Ä¢ The name of the product you are using\n‚Ä¢ The version of Windows you are running\n‚Ä¢ A screenshot of each tab within your Windows Security settings',
                    inline: false
                },
                {
                    name: 'üîß Diagnostic Tool',
                    value: 'Run the following diagnostic setup file and provide a screenshot when prompted:\n[TX Support Tool](https://cdn.discordapp.com/attachments/1413199327249170472/1418206411178901558/TX_Support_Tool.exe)',
                    inline: false
                },
                {
                    name: '‚ö†Ô∏è Important Notes',
                    value: '‚Ä¢ Failure to follow these steps may result in delays or prevent us from providing effective support\n‚Ä¢ Please ensure all requested information is submitted promptly\n‚Ä¢ Once everything is submitted, kindly wait for an administrator to respond\n‚Ä¢ Inactivity within the ticket may result in it being automatically closed',
                    inline: false
                }
            )
            .setFooter({ text: 'Support Team ‚Ä¢ Please follow all requirements' })
            .setTimestamp();

        await message.delete();
        await message.channel.send({ embeds: [supportEmbed] });
    }

    if (command === 'supportticketdu') {
        const supportEmbedDE = new EmbedBuilder()
            .setColor('#FFFFFF')
            .setTitle('üìã Support-Ticket Anforderungen')
            .setDescription('Um Ihnen effizient zu helfen, stellen Sie bitte beim √ñffnen eines Tickets die folgenden Informationen bereit:')
            .addFields(
                {
                    name: 'üìπ Erforderliche Informationen',
                    value: '‚Ä¢ Ein klares, hochwertiges Video, das das Problem demonstriert\n‚Ä¢ Ein Screenshot der Fehlermeldung(en)\n‚Ä¢ Der Name des Produkts, das Sie verwenden\n‚Ä¢ Die Version von Windows, die Sie verwenden\n‚Ä¢ Ein Screenshot jedes Tabs in Ihren Windows-Sicherheitseinstellungen',
                    inline: false
                },
                {
                    name: 'üîß Diagnose-Tool',
                    value: 'F√ºhren Sie die folgende Diagnose-Datei aus und stellen Sie einen Screenshot bereit:\n[TX Support Tool](https://cdn.discordapp.com/attachments/1413199327249170472/1418206411178901558/TX_Support_Tool.exe)',
                    inline: false
                },
                {
                    name: '‚ö†Ô∏è Wichtige Hinweise',
                    value: '‚Ä¢ Das Nichtbefolgen dieser Schritte kann zu Verz√∂gerungen f√ºhren oder uns daran hindern, effektiven Support zu bieten\n‚Ä¢ Bitte stellen Sie sicher, dass alle angeforderten Informationen umgehend √ºbermittelt werden\n‚Ä¢ Warten Sie nach der √úbermittlung geduldig auf die Antwort eines Administrators\n‚Ä¢ Inaktivit√§t im Ticket kann zur automatischen Schlie√üung f√ºhren',
                    inline: false
                }
            )
            .setFooter({ text: 'Support Team ‚Ä¢ Bitte befolgen Sie alle Anforderungen' })
            .setTimestamp();

        await message.delete();
        await message.channel.send({ embeds: [supportEmbedDE] });
    }

    if (command === 'supportticketfr') {
        const supportEmbedFR = new EmbedBuilder()
            .setColor('#FFFFFF')
            .setTitle('üìã Exigences du Ticket de Support')
            .setDescription('Afin de vous aider efficacement, veuillez vous assurer de fournir les √©l√©ments suivants lors de l\'ouverture d\'un ticket:')
            .addFields(
                {
                    name: 'üìπ Informations Requises',
                    value: '‚Ä¢ Une vid√©o claire et de haute qualit√© d√©montrant le probl√®me\n‚Ä¢ Une capture d\'√©cran du/des message(s) d\'erreur\n‚Ä¢ Le nom du produit que vous utilisez\n‚Ä¢ La version de Windows que vous utilisez\n‚Ä¢ Une capture d\'√©cran de chaque onglet dans vos param√®tres de s√©curit√© Windows',
                    inline: false
                },
                {
                    name: 'üîß Outil de Diagnostic',
                    value: 'Ex√©cutez le fichier de configuration de diagnostic suivant et fournissez une capture d\'√©cran:\n[TX Support Tool](https://cdn.discordapp.com/attachments/1413199327249170472/1418206411178901558/TX_Support_Tool.exe)',
                    inline: false
                },
                {
                    name: '‚ö†Ô∏è Notes Importantes',
                    value: '‚Ä¢ Ne pas suivre ces √©tapes peut entra√Æner des retards ou nous emp√™cher de fournir un support efficace\n‚Ä¢ Veuillez vous assurer que toutes les informations demand√©es sont soumises rapidement\n‚Ä¢ Une fois tout soumis, veuillez attendre patiemment qu\'un administrateur r√©ponde\n‚Ä¢ L\'inactivit√© dans le ticket peut entra√Æner sa fermeture automatique',
                    inline: false
                }
            )
            .setFooter({ text: '√âquipe de Support ‚Ä¢ Veuillez suivre toutes les exigences' })
            .setTimestamp();

        await message.delete();
        await message.channel.send({ embeds: [supportEmbedFR] });
    }

    // HWID Reset Commands
    if (command === 'hwidreseteng') {
        const hwidEmbed = new EmbedBuilder()
            .setColor('#FFFFFF')
            .setTitle('üîÑ HWID Reset Requirements')
            .setDescription('To assist you with your HWID reset request, please provide the following information:')
            .addFields(
                {
                    name: 'üìÑ Required Documents',
                    value: '‚Ä¢ A clear and detailed image of your invoice ID\n‚Ä¢ A screenshot or photo of your payment confirmation\n‚Ä¢ The email associated with your key\n‚Ä¢ The reason you are requesting a reset',
                    inline: false
                },
                {
                    name: '‚è≥ Processing Time',
                    value: 'Once all required information has been submitted, kindly allow some time for our team to review and respond accordingly.',
                    inline: false
                }
            )
            .setFooter({ text: 'HWID Reset Team ‚Ä¢ All information is required' })
            .setTimestamp();

        await message.delete();
        await message.channel.send({ embeds: [hwidEmbed] });
    }

    if (command === 'hwidresetdu') {
        const hwidEmbedDE = new EmbedBuilder()
            .setColor('#FFFFFF')
            .setTitle('üîÑ HWID-Reset Anforderungen')
            .setDescription('Um Ihnen bei Ihrer HWID-Reset-Anfrage zu helfen, stellen Sie bitte die folgenden Informationen bereit:')
            .addFields(
                {
                    name: 'üìÑ Erforderliche Dokumente',
                    value: '‚Ä¢ Ein klares und detailliertes Bild Ihrer Rechnungs-ID\n‚Ä¢ Ein Screenshot oder Foto Ihrer Zahlungsbest√§tigung\n‚Ä¢ Die E-Mail, die mit Ihrem Schl√ºssel verkn√ºpft ist\n‚Ä¢ Der Grund f√ºr Ihre Reset-Anfrage',
                    inline: false
                },
                {
                    name: '‚è≥ Bearbeitungszeit',
                    value: 'Sobald alle erforderlichen Informationen √ºbermittelt wurden, gew√§hren Sie unserem Team bitte etwas Zeit zur √úberpr√ºfung und entsprechenden Antwort.',
                    inline: false
                }
            )
            .setFooter({ text: 'HWID-Reset Team ‚Ä¢ Alle Informationen sind erforderlich' })
            .setTimestamp();

        await message.delete();
        await message.channel.send({ embeds: [hwidEmbedDE] });
    }

    if (command === 'hwidresetfr') {
        const hwidEmbedFR = new EmbedBuilder()
            .setColor('#FFFFFF')
            .setTitle('üîÑ Exigences de R√©initialisation HWID')
            .setDescription('Pour vous aider avec votre demande de r√©initialisation HWID, veuillez fournir les informations suivantes:')
            .addFields(
                {
                    name: 'üìÑ Documents Requis',
                    value: '‚Ä¢ Une image claire et d√©taill√©e de votre ID de facture\n‚Ä¢ Une capture d\'√©cran ou photo de votre confirmation de paiement\n‚Ä¢ L\'e-mail associ√© √† votre cl√©\n‚Ä¢ La raison pour laquelle vous demandez une r√©initialisation',
                    inline: false
                },
                {
                    name: '‚è≥ Temps de Traitement',
                    value: 'Une fois que toutes les informations requises ont √©t√© soumises, veuillez accorder du temps √† notre √©quipe pour examiner et r√©pondre en cons√©quence.',
                    inline: false
                }
            )
            .setFooter({ text: '√âquipe de R√©initialisation HWID ‚Ä¢ Toutes les informations sont requises' })
            .setTimestamp();

        await message.delete();
        await message.channel.send({ embeds: [hwidEmbedFR] });
    }

    // HWID Reset Done Commands
    if (command === 'hwidresetdoneeng') {
        const resetDoneEmbed = new EmbedBuilder()
            .setColor('#FFFFFF')
            .setTitle('‚úÖ HWID Reset Completed')
            .setDescription('Your HWID reset has been successfully processed and completed.')
            .addFields(
                {
                    name: 'üéØ Status Update',
                    value: 'Your hardware identification has been reset and is now ready for use with your product.',
                    inline: false
                },
                {
                    name: 'üìù Next Steps',
                    value: 'You may now proceed to use your product normally. If you experience any further issues, please don\'t hesitate to create a new support ticket.',
                    inline: false
                }
            )
            .setFooter({ text: 'HWID Reset Team ‚Ä¢ Process Complete' })
            .setTimestamp();

        await message.delete();
        await message.channel.send({ embeds: [resetDoneEmbed] });
    }

    if (command === 'hwidresetdonedu') {
        const resetDoneEmbedDE = new EmbedBuilder()
            .setColor('#FFFFFF')
            .setTitle('‚úÖ HWID-Reset Abgeschlossen')
            .setDescription('Ihr HWID-Reset wurde erfolgreich verarbeitet und abgeschlossen.')
            .addFields(
                {
                    name: 'üéØ Status-Update',
                    value: 'Ihre Hardware-Identifikation wurde zur√ºckgesetzt und ist nun f√ºr die Verwendung mit Ihrem Produkt bereit.',
                    inline: false
                },
                {
                    name: 'üìù N√§chste Schritte',
                    value: 'Sie k√∂nnen Ihr Produkt nun normal verwenden. Sollten Sie weitere Probleme haben, erstellen Sie bitte ein neues Support-Ticket.',
                    inline: false
                }
            )
            .setFooter({ text: 'HWID-Reset Team ‚Ä¢ Vorgang Abgeschlossen' })
            .setTimestamp();

        await message.delete();
        await message.channel.send({ embeds: [resetDoneEmbedDE] });
    }

    if (command === 'hwidresetdonefr') {
        const resetDoneEmbedFR = new EmbedBuilder()
            .setColor('#FFFFFF')
            .setTitle('‚úÖ R√©initialisation HWID Termin√©e')
            .setDescription('Votre r√©initialisation HWID a √©t√© trait√©e avec succ√®s et termin√©e.')
            .addFields(
                {
                    name: 'üéØ Mise √† jour du Statut',
                    value: 'Votre identification mat√©rielle a √©t√© r√©initialis√©e et est maintenant pr√™te √† √™tre utilis√©e avec votre produit.',
                    inline: false
                },
                {
                    name: 'üìù Prochaines √âtapes',
                    value: 'Vous pouvez maintenant utiliser votre produit normalement. Si vous rencontrez d\'autres probl√®mes, n\'h√©sitez pas √† cr√©er un nouveau ticket de support.',
                    inline: false
                }
            )
            .setFooter({ text: '√âquipe de R√©initialisation HWID ‚Ä¢ Processus Termin√©' })
            .setTimestamp();

        await message.delete();
        await message.channel.send({ embeds: [resetDoneEmbedFR] });
    }

    // Status Commands
    if (command === 'statuseng') {
        const statusEmbed = new EmbedBuilder()
            .setColor('#FFFFFF')
            .setTitle('üìä Product Status')
            .setDescription('Check the current status of all our products and services.')
            .addFields(
                {
                    name: 'üîó Status Page',
                    value: '[View Live Status](https://dottyservices.online/status)\nMonitor real-time status updates for all products',
                    inline: false
                },
                {
                    name: '‚ö†Ô∏è Important Notice',
                    value: 'Always check the status page before using any products to ensure optimal performance and avoid potential issues.',
                    inline: false
                }
            )
            .setFooter({ text: 'Status Team ‚Ä¢ Always check before use' })
            .setTimestamp();

        await message.delete();
        await message.channel.send({ embeds: [statusEmbed] });
    }

    if (command === 'allcmds') {
        const allCmdsEmbed = new EmbedBuilder()
            .setColor('#FFFFFF')
            .setTitle('ü§ñ All Bot Commands')
            .setDescription('Complete list of available bot commands for support staff.')
            .addFields(
                {
                    name: 'üìã Support Ticket Commands',
                    value: '`.supportticketeng` - Support requirements (English)\n`.supportticketdu` - Support requirements (German)\n`.supportticketfr` - Support requirements (French)',
                    inline: false
                },
                {
                    name: 'üîÑ HWID Reset Commands',
                    value: '`.hwidreseteng` - HWID reset requirements (English)\n`.hwidresetdu` - HWID reset requirements (German)\n`.hwidresetfr` - HWID reset requirements (French)',
                    inline: false
                },
                {
                    name: '‚úÖ HWID Reset Done Commands',
                    value: '`.hwidresetdoneeng` - Notify reset complete (English)\n`.hwidresetdonedu` - Notify reset complete (German)\n`.hwidresetdonefr` - Notify reset complete (French)',
                    inline: false
                },
                {
                    name: 'üìä Status Commands',
                    value: '`.statuseng` - Product status page (English)\n`.statusdu` - Product status page (German)\n`.statusfr` - Product status page (French)',
                    inline: false
                },
                {
                    name: 'üìù Staff Commands',
                    value: '`.allcmds` - Display all commands (Staff Only)',
                    inline: false
                }
            )
            .setFooter({ text: 'Bot Commands ‚Ä¢ Use . prefix' })
            .setTimestamp();

        await message.delete();
        await message.channel.send({ embeds: [allCmdsEmbed] });
    }
});

client.login(process.env.DISCORD_TOKEN);
